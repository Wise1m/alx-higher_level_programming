# 4-print_square.txt

===============================
How to Use 4-print_square.py
===============================

This module defines a function ``print_square(size)``.

Usage
=====

``print_square(...)``` prints a square of size `size` using the character `#`.

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(3)
    ###
    ###
    ###

    >>> print_square(5)
    #####
    #####
    #####
    #####
    #####

    >>> print_square(1)
    #

Non-Integer Size
================

``print_square()`` expects that the size is an integer.
If the size is not an integer, a ``TypeError`` is raised:

::

    >>> print_square("3")
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

::

    >>> print_square(3.5)
    Traceback (most recent call last):
        ...
    TypeError: size must be an integer

Zero or Negative Size
=====================

If the size is 0 or a negative number, a ``ValueError`` is raised:

::

    >>> print_square(0)
    Traceback (most recent call last):
        ...
    ValueError: size must be a positive integer

::

    >>> print_square(-5)
    Traceback (most recent call last):
        ...
    ValueError: size must be a positive integer

