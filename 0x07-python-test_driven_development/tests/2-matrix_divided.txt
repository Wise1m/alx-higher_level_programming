# 2-matrix_divided.txt

==============================
How to Use 0-divide_matrix.py
==============================

This module defines a matrix division function ``divide_matrix(matrix, div)``.

Usage
=====

``divide_matrix(...)``` returns a new matrix where each element is the result of dividing
the corresponding element from the original matrix by the provided divisor ``div``, rounded to 2 decimal places.

::

    >>> divide_matrix = __import__('0-divide_matrix').divide_matrix
    >>> divide_matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]

    >>> divide_matrix([[1, 2, 3], [4, 5, 6]], 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>> divide_matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]], '2')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> divide_matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> divide_matrix([[1, 2, 3], [4, 5, 6], [7, 8, '9']], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Dividing by Zero
================

Attempting to divide by zero raises a ``ZeroDivisionError``:

::

    >>> divide_matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

Non-Numbers in the Matrix
=========================

``divide_matrix()`` expects that the matrix contains only integers or floats.
If any element in the matrix is a non-integer and non-float, a ``TypeError`` is raised:

::

    >>> divide_matrix([[1, 2, 3], [4, 5, '6'], [7, 8, 9]], 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Non-Number Divisor
==================

The divisor must be a number (integer or float). If the divisor is not a number, a ``TypeError`` is raised:

::

    >>> divide_matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]], '2')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Results
=======

The resulting matrix has each element rounded to 2 decimal places:

::

    >>> divide_matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2.5)
    [[0.4, 0.8, 1.2], [1.6, 2.0, 2.4], [2.8, 3.2, 3.6]]

